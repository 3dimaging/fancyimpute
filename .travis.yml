sudo: false  # Use container-based infrastructure
language: python
env:
  global:
    - KERAS_BACKEND=tensorflow
    - CUDA_VISIBLE_DEVICES=""
matrix:
  include:
    - python: 2.7
    - python: 3.6
before_install:
  # Commands below copied from: http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  # reset the shell's lookup table for program name to path mappings
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
addons:
  apt:
    packages:
    # install pandoc for use with pypandoc for converting the README
    # from markdown to RST
    - pandoc
    # Even though I'm installing cvxopt via conda, still seem to need these:
    - liblapack-dev
    - libatlas-base-dev
install:
  - >
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
      numpy keras scipy nose pandas matplotlib cvxopt scikit-learn
  - source activate test-environment
  - conda install -c cvxgrp scs=1.2.6
  # install TensorFlow for CPU only
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.9.0rc1-cp27-none-linux_x86_64.whl
    else
      pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.9.0rc1-cp36-cp36m-linux_x86_64.whl
    fi
  - pip install pypandoc
  - pip install -r requirements.txt
  - pip install .
  - pip install coveralls
  - export PACKAGE_DIR=`pwd`
script:
  - cd $PACKAGE_DIR
  - nosetests test --with-coverage --cover-package=fancyimpute
after_success:
  - coveralls

